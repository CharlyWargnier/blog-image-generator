import streamlit as st
import re
from .lib.generate_images import generate_gradients, get_gradient_direction

def render():
    col1, col2, col3, col4 = st.columns(4)
    emojis = []

    # TODO: Render columns conditionally
    # TODO: Allow user to input less than 4 emojis, and update the rendered image accordingly
    with col1:
        emoji1 = st.text_input('Emoji 1', value='üëª')
        if emoji1 != '': emojis.append(emoji1)
    with col2:
        emoji2 = st.text_input('Emoji 2', value='ü§ñ')
        if emoji2 != '': emojis.append(emoji2)
    with col3:
        emoji3 = st.text_input('Emoji 3', value='üçò')
        if emoji3 != '': emojis.append(emoji3)
    with col4:
        emoji4 = st.text_input('Emoji 4', value='üêç')
        if emoji4 != '': emojis.append(emoji4)
    
    direction = st.selectbox(
        'Gradient direction',
        ['0 degrees (left-to-right)',
        '45 degrees (diagonal top-left-to-bottom-right)',
        '90 degrees (top-to-bottom)',
        '135 degrees (diagonal top-right-to-bottom-left)',
        '315 degrees (diagonal bottom-left-top-top-right)'
        ],
    )

    showCategory = st.checkbox('Show category text and icon')

    color = st.color_picker('Category text color', '#262730', help="Make sure the color is from our palette")

    return [emojis, showCategory, direction, color]


def generate(emojis, category, gradient_direction, color):
    verify_arguments(emojis)

    generated_images = []
    gradients = generate_gradients()
    coordinates = get_gradient_direction(gradient_direction)

    for i in range(len(gradients) - 1):
        categoryContent = ''

        if category:
            categoryContent = f"""
                <g transform="translate(48, 48)">
                    # White BG
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M42 0C18.804 0 0 18.804 0 42C0 65.196 18.804 84 42 84H250C273.196 84 292 65.196 292 42C292 18.804 273.196 0 250 0H42ZM41.5 12C25.2076 12 12 25.2076 12 41.5C12 57.7924 25.2076 71 41.5 71H42.5C58.7924 71 72 57.7924 72 41.5C72 25.2076 58.7924 12 42.5 12H41.5Z" fill="white"/>

                    # Background circle
                    <circle cx="42" cy="42" r="30" fill="{color}"/>

                    # Icon
                    <path d="M42 45.2C41.5593 45.2 41.1898 45.0467 40.8917 44.74C40.5935 44.4333 40.4444 44.0533 40.4444 43.6C40.4444 43.1467 40.5935 42.7667 40.8917 42.46C41.1898 42.1533 41.5593 42 42 42C42.4407 42 42.8102 42.1533 43.1083 42.46C43.4065 42.7667 43.5556 43.1467 43.5556 43.6C43.5556 44.0533 43.4065 44.4333 43.1083 44.74C42.8102 45.0467 42.4407 45.2 42 45.2ZM35.7778 45.2C35.337 45.2 34.9676 45.0467 34.6694 44.74C34.3713 44.4333 34.2222 44.0533 34.2222 43.6C34.2222 43.1467 34.3713 42.7667 34.6694 42.46C34.9676 42.1533 35.337 42 35.7778 42C36.2185 42 36.588 42.1533 36.8861 42.46C37.1843 42.7667 37.3333 43.1467 37.3333 43.6C37.3333 44.0533 37.1843 44.4333 36.8861 44.74C36.588 45.0467 36.2185 45.2 35.7778 45.2ZM48.2222 45.2C47.7815 45.2 47.412 45.0467 47.1139 44.74C46.8157 44.4333 46.6667 44.0533 46.6667 43.6C46.6667 43.1467 46.8157 42.7667 47.1139 42.46C47.412 42.1533 47.7815 42 48.2222 42C48.663 42 49.0324 42.1533 49.3306 42.46C49.6287 42.7667 49.7778 43.1467 49.7778 43.6C49.7778 44.0533 49.6287 44.4333 49.3306 44.74C49.0324 45.0467 48.663 45.2 48.2222 45.2ZM42 51.6C41.5593 51.6 41.1898 51.4467 40.8917 51.14C40.5935 50.8333 40.4444 50.4533 40.4444 50C40.4444 49.5467 40.5935 49.1667 40.8917 48.86C41.1898 48.5533 41.5593 48.4 42 48.4C42.4407 48.4 42.8102 48.5533 43.1083 48.86C43.4065 49.1667 43.5556 49.5467 43.5556 50C43.5556 50.4533 43.4065 50.8333 43.1083 51.14C42.8102 51.4467 42.4407 51.6 42 51.6ZM35.7778 51.6C35.337 51.6 34.9676 51.4467 34.6694 51.14C34.3713 50.8333 34.2222 50.4533 34.2222 50C34.2222 49.5467 34.3713 49.1667 34.6694 48.86C34.9676 48.5533 35.337 48.4 35.7778 48.4C36.2185 48.4 36.588 48.5533 36.8861 48.86C37.1843 49.1667 37.3333 49.5467 37.3333 50C37.3333 50.4533 37.1843 50.8333 36.8861 51.14C36.588 51.4467 36.2185 51.6 35.7778 51.6ZM48.2222 51.6C47.7815 51.6 47.412 51.4467 47.1139 51.14C46.8157 50.8333 46.6667 50.4533 46.6667 50C46.6667 49.5467 46.8157 49.1667 47.1139 48.86C47.412 48.5533 47.7815 48.4 48.2222 48.4C48.663 48.4 49.0324 48.5533 49.3306 48.86C49.6287 49.1667 49.7778 49.5467 49.7778 50C49.7778 50.4533 49.6287 50.8333 49.3306 51.14C49.0324 51.4467 48.663 51.6 48.2222 51.6ZM30.3333 58C29.7111 58 29.1667 57.76 28.7 57.28C28.2333 56.8 28 56.24 28 55.6V30.8C28 30.16 28.2333 29.6 28.7 29.12C29.1667 28.64 29.7111 28.4 30.3333 28.4H32.8611V27.28C32.8611 26.9067 32.9778 26.6 33.2111 26.36C33.4444 26.12 33.7426 26 34.1056 26C34.4685 26 34.7731 26.12 35.0194 26.36C35.2657 26.6 35.3889 26.9067 35.3889 27.28V28.4H48.6111V27.28C48.6111 26.9067 48.7278 26.6 48.9611 26.36C49.1944 26.12 49.4926 26 49.8556 26C50.2185 26 50.5231 26.12 50.7694 26.36C51.0157 26.6 51.1389 26.9067 51.1389 27.28V28.4H53.6667C54.2889 28.4 54.8333 28.64 55.3 29.12C55.7667 29.6 56 30.16 56 30.8V55.6C56 56.24 55.7667 56.8 55.3 57.28C54.8333 57.76 54.2889 58 53.6667 58H30.3333ZM30.3333 55.6H53.6667V38.4H30.3333V55.6Z" fill="white"/>

                    # Text
                    <path d="M85.7216 32.5455H89.5909L94.7727 45.1932H94.9773L100.159 32.5455H104.028V50H100.994V38.0085H100.832L96.0085 49.9489H93.7415L88.9176 37.983H88.7557V50H85.7216V32.5455ZM113.285 50.2557C112.007 50.2557 110.899 49.9744 109.962 49.4119C109.024 48.8494 108.297 48.0625 107.78 47.0511C107.268 46.0398 107.013 44.858 107.013 43.5057C107.013 42.1534 107.268 40.9687 107.78 39.9517C108.297 38.9347 109.024 38.1449 109.962 37.5824C110.899 37.0199 112.007 36.7386 113.285 36.7386C114.564 36.7386 115.672 37.0199 116.609 37.5824C117.547 38.1449 118.271 38.9347 118.783 39.9517C119.3 40.9687 119.558 42.1534 119.558 43.5057C119.558 44.858 119.3 46.0398 118.783 47.0511C118.271 48.0625 117.547 48.8494 116.609 49.4119C115.672 49.9744 114.564 50.2557 113.285 50.2557ZM113.302 47.7841C113.996 47.7841 114.575 47.5937 115.041 47.2131C115.507 46.8267 115.854 46.3097 116.081 45.6619C116.314 45.0142 116.43 44.2926 116.43 43.4972C116.43 42.696 116.314 41.9716 116.081 41.3239C115.854 40.6705 115.507 40.1506 115.041 39.7642C114.575 39.3778 113.996 39.1847 113.302 39.1847C112.592 39.1847 112.001 39.3778 111.53 39.7642C111.064 40.1506 110.714 40.6705 110.481 41.3239C110.254 41.9716 110.141 42.696 110.141 43.4972C110.141 44.2926 110.254 45.0142 110.481 45.6619C110.714 46.3097 111.064 46.8267 111.53 47.2131C112.001 47.5937 112.592 47.7841 113.302 47.7841ZM125.502 42.3295V50H122.417V36.9091H125.366V39.1335H125.519C125.82 38.4006 126.3 37.8182 126.959 37.3864C127.624 36.9545 128.445 36.7386 129.422 36.7386C130.326 36.7386 131.113 36.9318 131.783 37.3182C132.459 37.7045 132.982 38.2642 133.351 38.9972C133.726 39.7301 133.911 40.6193 133.905 41.6648V50H130.82V42.142C130.82 41.267 130.593 40.5824 130.138 40.0881C129.69 39.5937 129.067 39.3466 128.272 39.3466C127.732 39.3466 127.252 39.4659 126.832 39.7045C126.417 39.9375 126.09 40.2756 125.851 40.7188C125.618 41.1619 125.502 41.6989 125.502 42.3295ZM143.819 36.9091V39.2955H136.293V36.9091H143.819ZM138.151 33.7727H141.236V46.0625C141.236 46.4773 141.299 46.7955 141.424 47.017C141.555 47.233 141.725 47.3807 141.935 47.4602C142.145 47.5398 142.378 47.5795 142.634 47.5795C142.827 47.5795 143.003 47.5653 143.162 47.5369C143.327 47.5085 143.452 47.483 143.537 47.4602L144.057 49.8722C143.893 49.929 143.657 49.9915 143.35 50.0597C143.049 50.1278 142.68 50.1676 142.242 50.179C141.469 50.2017 140.773 50.0852 140.154 49.8295C139.535 49.5682 139.043 49.1648 138.68 48.6193C138.322 48.0739 138.145 47.392 138.151 46.5739V33.7727ZM150.005 42.3295V50H146.92V32.5455H149.937V39.1335H150.091C150.397 38.3949 150.872 37.8125 151.514 37.3864C152.162 36.9545 152.986 36.7386 153.986 36.7386C154.895 36.7386 155.687 36.929 156.363 37.3097C157.04 37.6903 157.562 38.2472 157.932 38.9801C158.307 39.7131 158.494 40.608 158.494 41.6648V50H155.409V42.142C155.409 41.2614 155.182 40.5767 154.727 40.0881C154.278 39.5937 153.647 39.3466 152.835 39.3466C152.29 39.3466 151.801 39.4659 151.369 39.7045C150.943 39.9375 150.608 40.2756 150.363 40.7188C150.125 41.1619 150.005 41.6989 150.005 42.3295ZM164.964 32.5455V50H161.879V32.5455H164.964ZM170.294 54.9091C169.874 54.9091 169.485 54.875 169.127 54.8068C168.775 54.7443 168.493 54.6705 168.283 54.5852L168.999 52.1818C169.448 52.3125 169.848 52.375 170.201 52.3693C170.553 52.3636 170.863 52.2528 171.13 52.0369C171.402 51.8267 171.632 51.4744 171.82 50.9801L172.084 50.2727L167.337 36.9091H170.61L173.627 46.7955H173.763L176.789 36.9091H180.07L174.828 51.5852C174.584 52.2784 174.26 52.8722 173.857 53.3665C173.453 53.8665 172.959 54.2472 172.374 54.5085C171.794 54.7756 171.101 54.9091 170.294 54.9091ZM188.638 50V36.9091H191.63V39.0909H191.766C192.005 38.3352 192.414 37.7528 192.993 37.3438C193.578 36.929 194.246 36.7216 194.996 36.7216C195.166 36.7216 195.357 36.7301 195.567 36.7472C195.783 36.7585 195.962 36.7784 196.104 36.8068V39.6449C195.973 39.5994 195.766 39.5597 195.482 39.5256C195.203 39.4858 194.933 39.4659 194.672 39.4659C194.11 39.4659 193.604 39.5881 193.155 39.8324C192.712 40.071 192.362 40.4034 192.107 40.8295C191.851 41.2557 191.723 41.7472 191.723 42.304V50H188.638ZM203.65 50.2557C202.338 50.2557 201.204 49.983 200.249 49.4375C199.301 48.8864 198.571 48.108 198.059 47.1023C197.548 46.0909 197.292 44.9006 197.292 43.5312C197.292 42.1847 197.548 41.0028 198.059 39.9858C198.576 38.9631 199.298 38.1676 200.224 37.5994C201.15 37.0256 202.238 36.7386 203.488 36.7386C204.295 36.7386 205.056 36.8693 205.772 37.1307C206.494 37.3864 207.13 37.7841 207.681 38.3239C208.238 38.8636 208.676 39.5511 208.994 40.3864C209.312 41.2159 209.471 42.2045 209.471 43.3523V44.2983H198.741V42.2188H206.514C206.508 41.6278 206.38 41.1023 206.13 40.642C205.88 40.1761 205.531 39.8097 205.082 39.5426C204.639 39.2756 204.122 39.142 203.531 39.142C202.9 39.142 202.346 39.2955 201.869 39.6023C201.392 39.9034 201.019 40.3011 200.752 40.7955C200.491 41.2841 200.357 41.821 200.352 42.4062V44.2216C200.352 44.983 200.491 45.6364 200.769 46.1818C201.048 46.7216 201.437 47.1364 201.937 47.4261C202.437 47.7102 203.022 47.8523 203.693 47.8523C204.142 47.8523 204.548 47.7898 204.911 47.6648C205.275 47.5341 205.59 47.3438 205.857 47.0938C206.124 46.8438 206.326 46.5341 206.463 46.1648L209.343 46.4886C209.161 47.25 208.815 47.9148 208.303 48.483C207.798 49.0455 207.15 49.483 206.36 49.7955C205.571 50.1023 204.667 50.2557 203.65 50.2557ZM214.953 50L211.254 36.9091H214.399L216.7 46.1136H216.819L219.171 36.9091H222.282L224.634 46.0625H224.762L227.029 36.9091H230.183L226.475 50H223.262L220.808 41.1534H220.629L218.174 50H214.953ZM232.577 50V36.9091H235.662V50H232.577ZM234.128 35.0511C233.639 35.0511 233.219 34.8892 232.867 34.5653C232.514 34.2358 232.338 33.8409 232.338 33.3807C232.338 32.9148 232.514 32.5199 232.867 32.196C233.219 31.8665 233.639 31.7017 234.128 31.7017C234.622 31.7017 235.043 31.8665 235.389 32.196C235.742 32.5199 235.918 32.9148 235.918 33.3807C235.918 33.8409 235.742 34.2358 235.389 34.5653C235.043 34.8892 234.622 35.0511 234.128 35.0511ZM242.16 42.3295V50H239.075V36.9091H242.023V39.1335H242.177C242.478 38.4006 242.958 37.8182 243.617 37.3864C244.282 36.9545 245.103 36.7386 246.08 36.7386C246.984 36.7386 247.771 36.9318 248.441 37.3182C249.117 37.7045 249.64 38.2642 250.009 38.9972C250.384 39.7301 250.569 40.6193 250.563 41.6648V50H247.478V42.142C247.478 41.267 247.251 40.5824 246.796 40.0881C246.347 39.5937 245.725 39.3466 244.93 39.3466C244.39 39.3466 243.91 39.4659 243.489 39.7045C243.075 39.9375 242.748 40.2756 242.509 40.7188C242.276 41.1619 242.16 41.6989 242.16 42.3295ZM258.798 50.2301C257.769 50.2301 256.849 49.9659 256.036 49.4375C255.224 48.9091 254.582 48.142 254.11 47.1364C253.638 46.1307 253.403 44.9091 253.403 43.4716C253.403 42.017 253.641 40.7898 254.119 39.7898C254.602 38.7841 255.252 38.0256 256.07 37.5142C256.888 36.9972 257.8 36.7386 258.806 36.7386C259.573 36.7386 260.204 36.8693 260.698 37.1307C261.192 37.3864 261.584 37.696 261.874 38.0597C262.164 38.4176 262.388 38.7557 262.548 39.0739H262.675V32.5455H265.769V50H262.735V47.9375H262.548C262.388 48.2557 262.158 48.5937 261.857 48.9517C261.556 49.304 261.158 49.6051 260.664 49.8551C260.17 50.1051 259.548 50.2301 258.798 50.2301ZM259.658 47.6989C260.312 47.6989 260.869 47.5227 261.329 47.1705C261.789 46.8125 262.138 46.3153 262.377 45.679C262.616 45.0426 262.735 44.3011 262.735 43.4545C262.735 42.608 262.616 41.8722 262.377 41.2472C262.144 40.6222 261.798 40.1364 261.337 39.7898C260.883 39.4432 260.323 39.2699 259.658 39.2699C258.971 39.2699 258.397 39.4489 257.937 39.8068C257.477 40.1648 257.13 40.6591 256.897 41.2898C256.664 41.9205 256.548 42.642 256.548 43.4545C256.548 44.2727 256.664 45.0028 256.897 45.6449C257.136 46.2812 257.485 46.7841 257.945 47.1534C258.411 47.517 258.982 47.6989 259.658 47.6989Z" fill="{color}"/>
                </g>
            """

        generated_images.append(f"""
            <svg width="1480" height="700" viewBox="0 0 1480 700" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                # Gradient Background
                <rect width="100%" height="100%" fill="url(#gradient)"/>

                # Emojis
                <text fill="black" xml:space="preserve" style="white-space: pre;" font-family="Inter" font-size="128" font-weight="600" letter-spacing="0.01em"><tspan x="470" y="396">{emojis[0]}</tspan></text>
                <text fill="black" xml:space="preserve" style="white-space: pre;" font-family="Inter" font-size="128" font-weight="600" letter-spacing="0.01em"><tspan x="620" y="396">{emojis[1]}</tspan></text>
                <text fill="black" xml:space="preserve" style="white-space: pre;" font-family="Inter" font-size="128" font-weight="600" letter-spacing="0.01em"><tspan x="770" y="396">{emojis[2]}</tspan></text>
                <text fill="black" xml:space="preserve" style="white-space: pre;" font-family="Inter" font-size="128" font-weight="600" letter-spacing="0.01em"><tspan x="920" y="396">{emojis[3]}</tspan></text>

                # Category name and icon
                {categoryContent}

                <defs>
                    # Gradient
                    <linearGradient id="gradient" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate({coordinates[0]})">{gradients[i]}</linearGradient>
                </defs>
            </svg>
        """.strip())

    return generated_images


def verify_arguments(emojis):
    # Check if we have enough emojis
    MIN_EMOJIS = 4

    if len(emojis) < MIN_EMOJIS:
        st.error("Please add four emojis")
        st.stop()

    # Check if emojis are actually emojis
    MATCH_EMOJI = re.compile(
        "["
        u"\U0001F600-\U0001F64F"  # emoticons
        u"\U0001F300-\U0001F5FF"  # symbols & pictographs
        u"\U0001F680-\U0001F6FF"  # transport & map symbols
        u"\U0001F1E0-\U0001F1FF"  # flags (iOS)
        u"\U00002500-\U00002BEF"  # chinese char
        u"\U00002702-\U000027B0"
        u"\U00002702-\U000027B0"
        u"\U000024C2-\U0001F251"
        u"\U0001f926-\U0001f937"
        u"\U00010000-\U0010ffff"
        u"\u2640-\u2642"
        u"\u2600-\u2B55"
        u"\u200d"
        u"\u23cf"
        u"\u23e9"
        u"\u231a"
        u"\ufe0f"  # dingbats
        u"\u3030"
        "]+",
        flags=re.UNICODE,
    )

    for i in range(len(emojis)):
        for x in range(len(emojis[i])):
            extracted_emoji = MATCH_EMOJI.match(emojis[i][x])

            if extracted_emoji == None:
                st.error("Hmmm, that doesn't look like a valid emoji. Please try using a different one!")
                st.stop()
