import streamlit as st
import re
from .lib.generate_images import generate_gradients, get_gradient_direction

def render():
    emoji = st.text_input('Emoji', value='ðŸš€')

    showCategory = st.checkbox('Show category text and icon')

    direction = st.selectbox(
        'Gradient direction',
        ['0 degrees (left-to-right)',
        '45 degrees (diagonal top-left-to-bottom-right)',
        '90 degrees (top-to-bottom)',
        '135 degrees (diagonal top-right-to-bottom-left)',
        '315 degrees (diagonal bottom-left-top-top-right)'
        ],
    )

    return [emoji, showCategory, direction]

def generate(emoji, category, gradient_direction):
    verify_arguments(emoji)


    generated_images = []
    gradients = generate_gradients()
    coordinates = get_gradient_direction(gradient_direction)

    for i in range(len(gradients) - 1):
        categoryContent = ''

        if category:
            categoryContent = f"""
                <g transform="translate(48, 48)">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M42 0C18.804 0 0 18.804 0 42C0 65.196 18.804 84 42 84H232C255.196 84 274 65.196 274 42C274 18.804 255.196 0 232 0H42ZM41.5 12C25.2076 12 12 25.2076 12 41.5C12 57.7924 25.2076 71 41.5 71H42.5C58.7924 71 72 57.7924 72 41.5C72 25.2076 58.7924 12 42.5 12H41.5Z" fill="white"/>
                    <path d="M33.1294 42.1614L28.0659 39.9335C27.6878 39.7715 27.4583 39.4812 27.3773 39.0626C27.2963 38.644 27.4043 38.2862 27.7013 37.9891L33.2104 32.4395C33.5885 32.0615 34.0408 31.7914 34.5674 31.6294C35.094 31.4674 35.6274 31.4404 36.1675 31.5484L39.2866 32.156C37.8013 33.8303 36.5996 35.4169 35.6814 36.9157C34.7632 38.4145 33.9125 40.163 33.1294 42.1614ZM56.6239 26.0393C56.786 26.0663 56.948 26.1136 57.11 26.1811C57.2721 26.2486 57.4206 26.3499 57.5556 26.4849C57.6906 26.6199 57.7919 26.7617 57.8594 26.9102C57.9269 27.0588 57.9742 27.214 58.0012 27.3761C58.1902 29.9416 57.6906 32.6151 56.5024 35.3966C55.3142 38.1782 53.6264 40.6626 51.4389 42.8501C49.9806 44.3083 48.4954 45.5438 46.9831 46.5565C45.4708 47.5692 43.864 48.3861 42.1626 49.0073C41.8656 49.1423 41.5753 49.1895 41.2917 49.149C41.0082 49.1085 40.7854 49.0073 40.6233 48.8452L35.1548 43.3767C34.9927 43.2146 34.8915 42.9918 34.851 42.7083C34.8105 42.4247 34.8577 42.1344 34.9927 41.8374C35.6409 40.136 36.4713 38.5225 37.484 36.9967C38.4967 35.4709 39.7187 33.9923 41.1499 32.5611C43.3374 30.3736 45.8218 28.6926 48.6034 27.5178C51.3849 26.3431 54.0584 25.8503 56.6239 26.0393V26.0393ZM46.2134 37.7866C46.7535 38.3267 47.4219 38.5967 48.2186 38.5967C49.0152 38.5967 49.6836 38.3267 50.2237 37.7866C50.7638 37.2465 51.0339 36.5781 51.0339 35.7814C51.0339 34.9848 50.7638 34.3164 50.2237 33.7763C49.6836 33.2362 49.0152 32.9661 48.2186 32.9661C47.4219 32.9661 46.7535 33.2362 46.2134 33.7763C45.6733 34.3164 45.4033 34.9848 45.4033 35.7814C45.4033 36.5781 45.6733 37.2465 46.2134 37.7866V37.7866ZM41.8791 50.8706C43.8775 50.0875 45.6261 49.2368 47.1248 48.3186C48.6236 47.4004 50.2102 46.1987 51.8845 44.7134L52.4516 47.8325C52.5597 48.3726 52.5326 48.906 52.3706 49.4326C52.2086 49.9592 51.9385 50.4115 51.5605 50.7896L46.0514 56.2987C45.7543 56.5957 45.3898 56.7037 44.9577 56.6227C44.5256 56.5417 44.2285 56.3122 44.0665 55.9341L41.8791 50.8706ZM29.0381 48.1161C29.9833 47.1709 31.131 46.6916 32.4813 46.6781C33.8315 46.6646 34.9792 47.1304 35.9244 48.0756C36.8696 49.0208 37.3422 50.1685 37.3422 51.5187C37.3422 52.869 36.8696 54.0167 35.9244 54.9619C35.2223 55.664 34.1286 56.2447 32.6433 56.7038C31.158 57.1628 28.9436 57.5949 26 58C26.4051 55.0564 26.8372 52.8488 27.2963 51.377C27.7553 49.9052 28.336 48.8182 29.0381 48.1161Z" fill="white"/>
                    <path d="M85.7217 50V32.5455H92.2671C93.608 32.5455 94.733 32.7784 95.6421 33.2443C96.5569 33.7102 97.2472 34.3637 97.7132 35.2046C98.1847 36.0398 98.4205 37.0142 98.4205 38.1279C98.4205 39.2472 98.1819 40.2188 97.7046 41.0426C97.233 41.8608 96.537 42.4943 95.6166 42.9432C94.6961 43.3864 93.5654 43.608 92.2245 43.608H87.5626V40.983H91.7984C92.5825 40.983 93.2245 40.875 93.7245 40.6591C94.2245 40.4375 94.5938 40.1165 94.8325 39.696C95.0768 39.2699 95.199 38.7472 95.199 38.1279C95.199 37.5085 95.0768 36.9801 94.8325 36.5426C94.5882 36.0994 94.216 35.7642 93.716 35.5369C93.216 35.304 92.5711 35.1875 91.7813 35.1875H88.8836V50H85.7217ZM94.7387 42.0909L99.0597 50H95.5313L91.287 42.0909H94.7387Z" fill="#262730"/>
                    <path d="M107.043 50.2557C105.73 50.2557 104.597 49.983 103.642 49.4375C102.693 48.8864 101.963 48.108 101.452 47.1023C100.94 46.0909 100.685 44.9006 100.685 43.5313C100.685 42.1847 100.94 41.0029 101.452 39.9858C101.969 38.9631 102.69 38.1676 103.617 37.5994C104.543 37.0256 105.631 36.7387 106.881 36.7387C107.688 36.7387 108.449 36.8693 109.165 37.1307C109.886 37.3864 110.523 37.7841 111.074 38.3239C111.631 38.8637 112.068 39.5512 112.386 40.3864C112.705 41.2159 112.864 42.2046 112.864 43.3523V44.2983H102.134V42.2188H109.906C109.901 41.6279 109.773 41.1023 109.523 40.6421C109.273 40.1762 108.923 39.8097 108.474 39.5426C108.031 39.2756 107.514 39.1421 106.923 39.1421C106.293 39.1421 105.739 39.2955 105.261 39.6023C104.784 39.9034 104.412 40.3012 104.145 40.7955C103.884 41.2841 103.75 41.821 103.744 42.4063V44.2216C103.744 44.983 103.884 45.6364 104.162 46.1818C104.44 46.7216 104.83 47.1364 105.33 47.4262C105.83 47.7102 106.415 47.8523 107.085 47.8523C107.534 47.8523 107.94 47.7898 108.304 47.6648C108.668 47.5341 108.983 47.3438 109.25 47.0938C109.517 46.8438 109.719 46.5341 109.855 46.1648L112.736 46.4887C112.554 47.25 112.207 47.9148 111.696 48.483C111.19 49.0455 110.543 49.483 109.753 49.7955C108.963 50.1023 108.06 50.2557 107.043 50.2557Z" fill="#262730"/>
                    <path d="M118.799 32.5455V50H115.714V32.5455H118.799Z" fill="#262730"/>
                    <path d="M128.007 50.2557C126.695 50.2557 125.561 49.983 124.606 49.4375C123.658 48.8864 122.927 48.108 122.416 47.1023C121.905 46.0909 121.649 44.9006 121.649 43.5313C121.649 42.1847 121.905 41.0029 122.416 39.9858C122.933 38.9631 123.655 38.1676 124.581 37.5994C125.507 37.0256 126.595 36.7387 127.845 36.7387C128.652 36.7387 129.413 36.8693 130.129 37.1307C130.851 37.3864 131.487 37.7841 132.038 38.3239C132.595 38.8637 133.033 39.5512 133.351 40.3864C133.669 41.2159 133.828 42.2046 133.828 43.3523V44.2983H123.098V42.2188H130.871C130.865 41.6279 130.737 41.1023 130.487 40.6421C130.237 40.1762 129.888 39.8097 129.439 39.5426C128.996 39.2756 128.479 39.1421 127.888 39.1421C127.257 39.1421 126.703 39.2955 126.226 39.6023C125.749 39.9034 125.376 40.3012 125.109 40.7955C124.848 41.2841 124.714 41.821 124.709 42.4063V44.2216C124.709 44.983 124.848 45.6364 125.126 46.1818C125.405 46.7216 125.794 47.1364 126.294 47.4262C126.794 47.7102 127.379 47.8523 128.05 47.8523C128.498 47.8523 128.905 47.7898 129.268 47.6648C129.632 47.5341 129.947 47.3438 130.214 47.0938C130.481 46.8438 130.683 46.5341 130.82 46.1648L133.7 46.4887C133.518 47.25 133.172 47.9148 132.66 48.483C132.155 49.0455 131.507 49.483 130.717 49.7955C129.927 50.1023 129.024 50.2557 128.007 50.2557Z" fill="#262730"/>
                    <path d="M140.445 50.2642C139.616 50.2642 138.868 50.1165 138.204 49.821C137.545 49.5199 137.022 49.0767 136.636 48.4915C136.255 47.9063 136.064 47.1847 136.064 46.3267C136.064 45.5881 136.201 44.9773 136.474 44.4943C136.746 44.0114 137.118 43.625 137.59 43.3352C138.062 43.0455 138.593 42.8267 139.184 42.679C139.78 42.5256 140.397 42.4148 141.033 42.3466C141.8 42.2671 142.422 42.196 142.9 42.1335C143.377 42.0654 143.724 41.9631 143.939 41.8267C144.161 41.6847 144.272 41.4659 144.272 41.1705V41.1193C144.272 40.4773 144.082 39.9801 143.701 39.6279C143.32 39.2756 142.772 39.0994 142.056 39.0994C141.3 39.0994 140.701 39.2642 140.258 39.5938C139.82 39.9233 139.525 40.3125 139.371 40.7614L136.491 40.3523C136.718 39.5568 137.093 38.8921 137.616 38.358C138.138 37.8182 138.778 37.4148 139.533 37.1477C140.289 36.875 141.124 36.7387 142.039 36.7387C142.67 36.7387 143.297 36.8125 143.922 36.9602C144.547 37.108 145.118 37.3523 145.636 37.6932C146.153 38.0284 146.567 38.4858 146.88 39.0654C147.198 39.6449 147.357 40.3693 147.357 41.2387V50H144.391V48.2017H144.289C144.101 48.5654 143.837 48.9063 143.496 49.2244C143.161 49.5369 142.738 49.7898 142.226 49.983C141.721 50.1705 141.127 50.2642 140.445 50.2642ZM141.246 47.9972C141.866 47.9972 142.403 47.875 142.857 47.6307C143.312 47.3807 143.661 47.0512 143.905 46.6421C144.155 46.233 144.28 45.7869 144.28 45.304V43.7614C144.184 43.8409 144.019 43.9148 143.786 43.983C143.559 44.0512 143.303 44.1108 143.019 44.1619C142.735 44.2131 142.454 44.2585 142.175 44.2983C141.897 44.3381 141.655 44.3722 141.451 44.4006C140.991 44.4631 140.579 44.5654 140.215 44.7074C139.851 44.8494 139.564 45.0483 139.354 45.304C139.144 45.554 139.039 45.8779 139.039 46.2756C139.039 46.8438 139.246 47.2727 139.661 47.5625C140.076 47.8523 140.604 47.9972 141.246 47.9972Z" fill="#262730"/>
                    <path d="M161.046 40.3693L158.233 40.6762C158.154 40.3921 158.015 40.125 157.816 39.875C157.623 39.625 157.361 39.4233 157.032 39.2699C156.702 39.1165 156.299 39.0398 155.822 39.0398C155.179 39.0398 154.64 39.179 154.202 39.4574C153.77 39.7358 153.557 40.0966 153.563 40.5398C153.557 40.9205 153.697 41.2301 153.981 41.4688C154.27 41.7074 154.748 41.9034 155.412 42.0568L157.645 42.5341C158.884 42.8012 159.804 43.2244 160.407 43.804C161.015 44.3835 161.322 45.1421 161.327 46.0796C161.322 46.9034 161.08 47.6307 160.603 48.2614C160.131 48.8864 159.475 49.375 158.634 49.7273C157.793 50.0796 156.827 50.2557 155.736 50.2557C154.134 50.2557 152.844 49.9205 151.867 49.25C150.89 48.5739 150.307 47.6335 150.12 46.429L153.128 46.1392C153.265 46.7301 153.554 47.1762 153.998 47.4773C154.441 47.7784 155.018 47.929 155.728 47.929C156.461 47.929 157.049 47.7784 157.492 47.4773C157.941 47.1762 158.165 46.804 158.165 46.3608C158.165 45.9858 158.02 45.6762 157.731 45.4318C157.447 45.1875 157.003 45 156.401 44.8693L154.168 44.4006C152.912 44.1392 151.983 43.6989 151.381 43.0796C150.779 42.4546 150.481 41.6648 150.486 40.7102C150.481 39.9034 150.699 39.2046 151.143 38.6137C151.591 38.0171 152.214 37.5568 153.009 37.233C153.81 36.9034 154.733 36.7387 155.779 36.7387C157.313 36.7387 158.52 37.0654 159.401 37.7188C160.287 38.3722 160.836 39.2557 161.046 40.3693Z" fill="#262730"/>
                    <path d="M169.907 50.2557C168.594 50.2557 167.461 49.983 166.506 49.4375C165.557 48.8864 164.827 48.108 164.316 47.1023C163.804 46.0909 163.549 44.9006 163.549 43.5313C163.549 42.1847 163.804 41.0029 164.316 39.9858C164.833 38.9631 165.554 38.1676 166.481 37.5994C167.407 37.0256 168.495 36.7387 169.745 36.7387C170.552 36.7387 171.313 36.8693 172.029 37.1307C172.75 37.3864 173.387 37.7841 173.938 38.3239C174.495 38.8637 174.932 39.5512 175.25 40.3864C175.569 41.2159 175.728 42.2046 175.728 43.3523V44.2983H164.998V42.2188H172.77C172.765 41.6279 172.637 41.1023 172.387 40.6421C172.137 40.1762 171.787 39.8097 171.339 39.5426C170.895 39.2756 170.378 39.1421 169.787 39.1421C169.157 39.1421 168.603 39.2955 168.125 39.6023C167.648 39.9034 167.276 40.3012 167.009 40.7955C166.748 41.2841 166.614 41.821 166.608 42.4063V44.2216C166.608 44.983 166.748 45.6364 167.026 46.1818C167.304 46.7216 167.694 47.1364 168.194 47.4262C168.694 47.7102 169.279 47.8523 169.949 47.8523C170.398 47.8523 170.804 47.7898 171.168 47.6648C171.532 47.5341 171.847 47.3438 172.114 47.0938C172.381 46.8438 172.583 46.5341 172.719 46.1648L175.6 46.4887C175.418 47.25 175.071 47.9148 174.56 48.483C174.054 49.0455 173.407 49.483 172.617 49.7955C171.827 50.1023 170.924 50.2557 169.907 50.2557Z" fill="#262730"/>
                    <path d="M187.856 42.3296V50H184.771V36.9091H187.72V39.1335H187.873C188.174 38.4006 188.654 37.8182 189.314 37.3864C189.978 36.9546 190.799 36.7387 191.777 36.7387C192.68 36.7387 193.467 36.9318 194.137 37.3182C194.814 37.7046 195.336 38.2642 195.706 38.9972C196.081 39.7301 196.265 40.6193 196.26 41.6648V50H193.174V42.1421C193.174 41.2671 192.947 40.5824 192.493 40.0881C192.044 39.5938 191.422 39.3466 190.626 39.3466C190.086 39.3466 189.606 39.4659 189.186 39.7046C188.771 39.9375 188.444 40.2756 188.206 40.7188C187.973 41.1619 187.856 41.6989 187.856 42.3296Z" fill="#262730"/>
                    <path d="M205.346 50.2557C204.068 50.2557 202.96 49.9744 202.022 49.4119C201.085 48.8494 200.358 48.0625 199.84 47.0512C199.329 46.0398 199.073 44.858 199.073 43.5057C199.073 42.1534 199.329 40.9688 199.84 39.9517C200.358 38.9347 201.085 38.1449 202.022 37.5824C202.96 37.0199 204.068 36.7387 205.346 36.7387C206.625 36.7387 207.733 37.0199 208.67 37.5824C209.608 38.1449 210.332 38.9347 210.843 39.9517C211.36 40.9688 211.619 42.1534 211.619 43.5057C211.619 44.858 211.36 46.0398 210.843 47.0512C210.332 48.0625 209.608 48.8494 208.67 49.4119C207.733 49.9744 206.625 50.2557 205.346 50.2557ZM205.363 47.7841C206.056 47.7841 206.636 47.5938 207.102 47.2131C207.568 46.8267 207.914 46.3097 208.142 45.6619C208.375 45.0142 208.491 44.2926 208.491 43.4972C208.491 42.696 208.375 41.9716 208.142 41.3239C207.914 40.6705 207.568 40.1506 207.102 39.7642C206.636 39.3779 206.056 39.1847 205.363 39.1847C204.653 39.1847 204.062 39.3779 203.59 39.7642C203.125 40.1506 202.775 40.6705 202.542 41.3239C202.315 41.9716 202.201 42.696 202.201 43.4972C202.201 44.2926 202.315 45.0142 202.542 45.6619C202.775 46.3097 203.125 46.8267 203.59 47.2131C204.062 47.5938 204.653 47.7841 205.363 47.7841Z" fill="#262730"/>
                    <path d="M221.014 36.9091V39.2955H213.489V36.9091H221.014ZM215.347 33.7727H218.432V46.0625C218.432 46.4773 218.495 46.7955 218.62 47.0171C218.75 47.233 218.921 47.3807 219.131 47.4602C219.341 47.5398 219.574 47.5796 219.83 47.5796C220.023 47.5796 220.199 47.5654 220.358 47.5369C220.523 47.5085 220.648 47.483 220.733 47.4602L221.253 49.8722C221.088 49.929 220.853 49.9915 220.546 50.0597C220.245 50.1279 219.875 50.1676 219.438 50.179C218.665 50.2017 217.969 50.0852 217.35 49.8296C216.73 49.5682 216.239 49.1648 215.875 48.6193C215.517 48.0739 215.341 47.3921 215.347 46.5739V33.7727Z" fill="#262730"/>
                    <path d="M229.49 50.2557C228.177 50.2557 227.044 49.983 226.089 49.4375C225.14 48.8864 224.41 48.108 223.899 47.1023C223.387 46.0909 223.132 44.9006 223.132 43.5313C223.132 42.1847 223.387 41.0029 223.899 39.9858C224.416 38.9631 225.137 38.1676 226.063 37.5994C226.99 37.0256 228.078 36.7387 229.328 36.7387C230.134 36.7387 230.896 36.8693 231.612 37.1307C232.333 37.3864 232.97 37.7841 233.521 38.3239C234.078 38.8637 234.515 39.5512 234.833 40.3864C235.151 41.2159 235.311 42.2046 235.311 43.3523V44.2983H224.58V42.2188H232.353C232.347 41.6279 232.22 41.1023 231.97 40.6421C231.72 40.1762 231.37 39.8097 230.921 39.5426C230.478 39.2756 229.961 39.1421 229.37 39.1421C228.74 39.1421 228.186 39.2955 227.708 39.6023C227.231 39.9034 226.859 40.3012 226.592 40.7955C226.33 41.2841 226.197 41.821 226.191 42.4063V44.2216C226.191 44.983 226.33 45.6364 226.609 46.1818C226.887 46.7216 227.276 47.1364 227.776 47.4262C228.276 47.7102 228.862 47.8523 229.532 47.8523C229.981 47.8523 230.387 47.7898 230.751 47.6648C231.115 47.5341 231.43 47.3438 231.697 47.0938C231.964 46.8438 232.166 46.5341 232.302 46.1648L235.183 46.4887C235.001 47.25 234.654 47.9148 234.143 48.483C233.637 49.0455 232.99 49.483 232.2 49.7955C231.41 50.1023 230.507 50.2557 229.49 50.2557Z" fill="#262730"/>
                    <path d="M248.507 40.3693L245.695 40.6762C245.615 40.3921 245.476 40.125 245.277 39.875C245.084 39.625 244.823 39.4233 244.493 39.2699C244.163 39.1165 243.76 39.0398 243.283 39.0398C242.641 39.0398 242.101 39.179 241.663 39.4574C241.232 39.7358 241.019 40.0966 241.024 40.5398C241.019 40.9205 241.158 41.2301 241.442 41.4688C241.732 41.7074 242.209 41.9034 242.874 42.0568L245.107 42.5341C246.345 42.8012 247.266 43.2244 247.868 43.804C248.476 44.3835 248.783 45.1421 248.788 46.0796C248.783 46.9034 248.541 47.6307 248.064 48.2614C247.592 48.8864 246.936 49.375 246.095 49.7273C245.254 50.0796 244.288 50.2557 243.198 50.2557C241.595 50.2557 240.306 49.9205 239.328 49.25C238.351 48.5739 237.769 47.6335 237.581 46.429L240.59 46.1392C240.726 46.7301 241.016 47.1762 241.459 47.4773C241.902 47.7784 242.479 47.929 243.189 47.929C243.922 47.929 244.51 47.7784 244.953 47.4773C245.402 47.1762 245.627 46.804 245.627 46.3608C245.627 45.9858 245.482 45.6762 245.192 45.4318C244.908 45.1875 244.465 45 243.862 44.8693L241.629 44.4006C240.374 44.1392 239.445 43.6989 238.842 43.0796C238.24 42.4546 237.942 41.6648 237.948 40.7102C237.942 39.9034 238.161 39.2046 238.604 38.6137C239.053 38.0171 239.675 37.5568 240.47 37.233C241.271 36.9034 242.195 36.7387 243.24 36.7387C244.774 36.7387 245.982 37.0654 246.862 37.7188C247.749 38.3722 248.297 39.2557 248.507 40.3693Z" fill="#262730"/>
                </g>
            """

        generated_images.append(f"""
            <svg viewBox="0 0 1480 700" width="100%" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                # Gradient Background
                <rect width="100%" height="100%" fill="url(#gradient)"/>

                # Emoji
                <text fill="black" xml:space="preserve" style="white-space: pre" font-family="Inter" font-size="240" font-weight="600" letter-spacing="0.01em"><tspan x="653.047" y="437.273">{emoji}</tspan></text>

                # Category name and icon
                {categoryContent}

                <defs>
                    # Gradient
                    <linearGradient id="gradient" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate({coordinates[0]})">{gradients[i]}</linearGradient>
                </defs>
            </svg>
        """.strip())

    return generated_images


def verify_arguments(emoji):
    # Check if emoji is not empty
    if emoji == '':
        st.error("Please add an emoji")
        st.stop()

    # Check if emoji is actually an emoji
    MATCH_EMOJI = re.compile(
        "["
        u"\U0001F600-\U0001F64F"  # emoticons
        u"\U0001F300-\U0001F5FF"  # symbols & pictographs
        u"\U0001F680-\U0001F6FF"  # transport & map symbols
        u"\U0001F1E0-\U0001F1FF"  # flags (iOS)
        u"\U00002500-\U00002BEF"  # chinese char
        u"\U00002702-\U000027B0"
        u"\U00002702-\U000027B0"
        u"\U000024C2-\U0001F251"
        u"\U0001f926-\U0001f937"
        u"\U00010000-\U0010ffff"
        u"\u2640-\u2642"
        u"\u2600-\u2B55"
        u"\u200d"
        u"\u23cf"
        u"\u23e9"
        u"\u231a"
        u"\ufe0f"  # dingbats
        u"\u3030"
        "]+",
        flags=re.UNICODE,
    )

    for i in range(len(emoji)):
        extracted_emoji = MATCH_EMOJI.match(emoji[i])

        if extracted_emoji == None:
            st.error("Hmmm, that doesn't look like a valid emoji. Please try using a different one!")
            st.stop()
